apiVersion: apps/v1
kind: Deployment
metadata:
  name: sample-deployment
  labels:
    app: sample
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sample
  template:
    metadata:
        labels:
          app: sample
    spec:
      serviceAccountName: sample-acc
      containers:
      - name: bash
        image: bash:4.4.19
        volumeMounts:
        - name: shared-volume
          mountPath: /tmp/
        command: ["watch"]
        args: ["ls", "/tmp/"]
      - name: sidecar
        image: kiwigrid/k8s-sidecar:latest
        volumeMounts:
        - name: shared-volume
          mountPath: /tmp/
         # Only relevant for token based auth (like with git)
#        envFrom:
#        - secretRef:
#            name: token-auth-sample-secret
        env:
        - name: LABEL
          value: "findme"
        - name: FOLDER
          value: /tmp/
        - name: RESOURCE
          value: both
      volumes:
      - name: shared-volume
        emptyDir: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sample-configmap
  labels:
    findme: "yea"
data:
  hello.world: |-
     Hello World!
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sample-configmap-from-url
  labels:
        findme: "yea"
data:
  # fetch https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json with the grafana sidecar
  # .url will be stripped and the file will be called nginx-ingress.json
  nginx-ingress.json.url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
---
apiVersion: v1
kind: Secret
metadata:
  name: sample-secret
  labels:
    findme: "yea"
type: Opaque
data:
  # base64 encoded: my super cool \n multiline \ secret
  secret.world: bXkgc3VwZXIgY29vbAptdWx0aWxpbmUKc2VjcmV0
---
# This secret is only necessary for token based authentication of http requests.
# Refer to README.md for details on the two parameters REQ_TOKEN_KEY and REQ_TOKEN_VALUE
apiVersion: v1
kind: Secret
metadata:
  name: token-auth-sample-secret
type: Opaque
data:
    #REQ_TOKEN_KEY: private_token
    # base64 encoded super-duper-secret authentication token
    REQ_TOKEN_VALUE: c3VwZXItZHVwZXItc2VjcmV0
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: sample-role
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "watch", "list"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sample-acc
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: sample-rolebind
roleRef:
  kind: ClusterRole
  name: sample-role
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: sample-acc
  namespace: default

