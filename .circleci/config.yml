version: 2.1

jobs:
  build:
    docker:
      - image: circleci/python:3.7.4

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      #- run:
      #    name: run tests
      #    command: |
      #      . venv/bin/activate
      #      python manage.py test

      #- store_artifacts:
      #    path: test-reports
      #    destination: test-reports

      - setup_remote_docker:
          docker_layer_caching: true

      - run: |
          TAG=0.1.$CIRCLE_BUILD_NUM
          echo "$TAG" > /tmp/VERSION
          docker build -t   kiwigrid/k8s-sidecar-build:$TAG . 
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker push kiwigrid/k8s-sidecar-build:$TAG
      - persist_to_workspace:
          root: /tmp
          paths:
            - VERSION

  test-k8s-1-13:
    machine: true
    environment:
      KIND_VERSION: v0.7.0
      K8S_VERSION: v1.13.12
    steps:
      - attach_workspace:
          at: /tmp/
      - checkout
      - run: |
          VERSION=`cat /tmp/VERSION`
          sed -i 's/SIDECAR_VERSION/'"$VERSION"'/g' .circleci/test/sidecar.yaml
          cat .circleci/test/sidecar.yaml
      - run:
          name: test-in-cluster
          command: .circleci/test-in-cluster.sh
          no_output_timeout: 3600

  test-k8s-1-14:
    machine: true
    environment:
      KIND_VERSION: v0.7.0
      K8S_VERSION: v1.14.10
    steps:
      - attach_workspace:
          at: /tmp/
      - checkout
      - run: |
          VERSION=`cat /tmp/VERSION`
          sed -i 's/SIDECAR_VERSION/'"$VERSION"'/g' .circleci/test/sidecar.yaml
          cat .circleci/test/sidecar.yaml
      - run:
          name: test-in-cluster
          command: .circleci/test-in-cluster.sh
          no_output_timeout: 3600

  test-k8s-1-15:
    machine: true
    environment:
      KIND_VERSION: v0.7.0
      K8S_VERSION: v1.15.7
    steps:
      - attach_workspace:
          at: /tmp/
      - checkout
      - run: |
          VERSION=`cat /tmp/VERSION`
          sed -i 's/SIDECAR_VERSION/'"$VERSION"'/g' .circleci/test/sidecar.yaml
          cat .circleci/test/sidecar.yaml
      - run:
          name: test-in-cluster
          command: .circleci/test-in-cluster.sh
          no_output_timeout: 3600

  test-k8s-1-16:
    machine: true
    environment:
      KIND_VERSION: v0.7.0
      K8S_VERSION: v1.16.4
    steps:
      - attach_workspace:
          at: /tmp/
      - checkout
      - run: |
          VERSION=`cat /tmp/VERSION`
          sed -i 's/SIDECAR_VERSION/'"$VERSION"'/g' .circleci/test/sidecar.yaml
          cat .circleci/test/sidecar.yaml
      - run:
          name: test-in-cluster
          command: .circleci/test-in-cluster.sh
          no_output_timeout: 3600

  deploy:
    docker:
      - image: circleci/python:3.7.4
    steps:
      - attach_workspace:
          at: /tmp/
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true

      - run: |
          TAG=`cat /tmp/VERSION`
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker pull kiwigrid/k8s-sidecar-build:$TAG
          docker tag kiwigrid/k8s-sidecar-build:$TAG kiwigrid/k8s-sidecar:$TAG
          docker tag kiwigrid/k8s-sidecar-build:$TAG kiwigrid/k8s-sidecar:latest
          docker push kiwigrid/k8s-sidecar:$TAG
          docker push kiwigrid/k8s-sidecar:latest

workflows:
  version: 2
  test_deploy:
    jobs:
      - build
      - test-k8s-1-13:
          requires:
            - build
      - test-k8s-1-14:
          requires:
            - build
      - test-k8s-1-15:
          requires:
            - build
      - test-k8s-1-16:
          requires:
            - build
      - deploy:
          requires:
            - test-k8s-1-13
            - test-k8s-1-14
            - test-k8s-1-15
            - test-k8s-1-16
          filters:
            branches:
              only: master
