name: "Build and Test"
on:
  - pull_request
  - workflow_dispatch
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build sidecar
        uses: docker/build-push-action@v4
        with:
          push: false
          outputs: type=docker,dest=/tmp/k8s-sidecar.tar
          tags: "kiwigrid/k8s-sidecar:testing"
      - name: Prepare dummy server static resources
        run: |
          cp test/kubelogo.png test/server/static/
      - name: Build dummy server
        uses: docker/build-push-action@v4
        with:
          context: "test/server"
          push: false
          outputs: type=docker,dest=/tmp/dummy-server.tar
          tags: "dummy-server:1.0.0"
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: images
          path: /tmp/*.tar
  test:
    needs:
      - build
    strategy:
      matrix:
        # see https://github.com/kubernetes-sigs/kind/releases for supported k8s versions per kind version
        k8s:
          - maj_min: v1.19
            digest: sha256:476cb3269232888437b61deca013832fee41f9f074f9bed79f57e4280f7c48b7
          - maj_min: v1.20
            digest: sha256:a32bf55309294120616886b5338f95dd98a2f7231519c7dedcec32ba29699394
          - maj_min: v1.21
            digest: sha256:9d9eb5fb26b4fbc0c6d95fa8c790414f9750dd583f5d7cee45d92e8c26670aa1
          - maj_min: v1.22
            digest: sha256:7d9708c4b0873f0fe2e171e2b1b7f45ae89482617778c1c875f1053d4cef2e41
          - maj_min: v1.23
            digest: sha256:ef453bb7c79f0e3caba88d2067d4196f427794086a7d0df8df4f019d5e336b61
          - maj_min: v1.24
            digest: sha256:577c630ce8e509131eab1aea12c022190978dd2f745aac5eb1fe65c0807eb315
          - maj_min: v1.25
            digest: sha256:f52781bc0d7a19fb6c405c2af83abfeb311f130707a0e219175677e366cc45d1
          - maj_min: v1.26
            digest: sha256:691e24bd2417609db7e589e1a479b902d2e209892a10ce375fab60a8407c7352
    name: "Test on k8s ${{ matrix.k8s.maj_min }}"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Create k8s Kind Cluster
        # make sure the k8s versions match the kind version of the action version ðŸ¤¯
        uses: helm/kind-action@v1.6.0
        with:
          node_image: kindest/node@${{ matrix.k8s.digest }}
          config: test/kind-config.yaml
          cluster_name: sidecar-testing
          wait: 5m
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: images
          path: /tmp
      - name: Load images into kind cluster
        run: |
          kind load image-archive /tmp/k8s-sidecar.tar --name sidecar-testing
          kind load image-archive /tmp/dummy-server.tar --name sidecar-testing
      - name: Install Sidecar and Dummy Server
        run: |
          wait_for_pod_ready() {
            while [[ $(kubectl get pods $1 -o 'jsonpath={..status.conditions[?(@.type=="Ready")].status}') != "True" ]]; do echo "waiting for pod '$1' to become ready..." && sleep 5; done
            echo "Pod '$1' ready."
          }
          echo "Installing sidecar..."
          kubectl apply -f "test/resources/sidecar.yaml"

          sleep 10

          kubectl get pods

          wait_for_pod_ready "sidecar"
          wait_for_pod_ready "sidecar-5xx"
          wait_for_pod_ready "sidecar-pythonscript"
          wait_for_pod_ready "dummy-server-pod"

      - name: Install Configmaps and Secrets
        run: |
          wait_for_pod_log() {
            while [[ $(kubectl logs $1 | grep $2) == "" ]]; do echo "waiting 5 more seconds for '$2' to appear in logs of pod '$1'..." && sleep 5; done
            echo "Pod '$1' logs contains '$2'"
          }
          # because the sidecar pods signal ready state before we actually opened up all watching subprocesses, we wait some more time
          sleep 20
          echo "Installing resources..."
          kubectl apply -f "test/resources/resources.yaml"
          pods=("sidecar" "sidecar-5xx" "sidecar-pythonscript")
          resources=("sample-configmap" "sample-secret-binary" "absolute-configmap" "relative-configmap" "change-dir-configmap" "url-configmap-500" "url-configmap-basic-auth" "sample-configmap")
          for p in ${pods[*]}; do
            for r in ${resources[*]}; do
              wait_for_pod_log $p $r
            done
          done
          # 5 more seconds after the last thing appeared in the logs.
          sleep 5
      - name: Retrieve pod logs
        run: |
          kubectl logs sidecar > /tmp/sidecar.log
          kubectl logs sidecar-5xx > /tmp/sidecar-5xx.log
          kubectl logs sidecar-pythonscript > /tmp/sidecar-pythonscript.log
          kubectl logs dummy-server-pod > /tmp/dummy-server.log
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: pod-logs_${{ matrix.k8s.maj_min }}
          path: /tmp/*.log
      - name: Download expected files from cluster
        run: |
          echo "Downloading resource files from sidecar..."
          kubectl cp sidecar:/tmp/hello.world /tmp/hello.world
          kubectl cp sidecar:/tmp/cm-kubelogo.png /tmp/cm-kubelogo.png
          kubectl cp sidecar:/tmp/secret-kubelogo.png /tmp/secret-kubelogo.png
          kubectl cp sidecar:/tmp/url-downloaded-kubelogo.png /tmp/url-downloaded-kubelogo.png          
          kubectl cp sidecar:/tmp/script_result /tmp/script_result
          kubectl cp sidecar:/tmp/absolute/absolute.txt /tmp/absolute.txt
          kubectl cp sidecar:/tmp/relative/relative.txt /tmp/relative.txt
          kubectl cp sidecar:/tmp/orig-dir/change-dir.txt /tmp/change-dir.txt
          kubectl cp sidecar:/tmp/500.txt /tmp/500.txt || true
          kubectl cp sidecar:/tmp/secured.txt /tmp/secured.txt

          echo "Downloading resource files from sidecar-5xx..."
          kubectl cp sidecar-5xx:/tmp-5xx/hello.world /tmp/5xx/hello.world
          kubectl cp sidecar-5xx:/tmp-5xx/cm-kubelogo.png /tmp/5xx/cm-kubelogo.png
          kubectl cp sidecar-5xx:/tmp-5xx/secret-kubelogo.png /tmp/5xx/secret-kubelogo.png
          kubectl cp sidecar-5xx:/tmp-5xx/url-downloaded-kubelogo.png /tmp/5xx/url-downloaded-kubelogo.png          
          # script also generates into '/tmp'
          kubectl cp sidecar-5xx:/tmp/script_result /tmp/5xx/script_result
          # absolute path in configmap points to /tmp in 'absolute-configmap'
          kubectl cp sidecar-5xx:/tmp/absolute/absolute.txt /tmp/5xx/absolute.txt
          kubectl cp sidecar-5xx:/tmp-5xx/relative/relative.txt /tmp/5xx/relative.txt
          kubectl cp sidecar-5xx:/tmp-5xx/orig-dir/change-dir.txt /tmp/5xx/change-dir.txt
          kubectl cp sidecar-5xx:/tmp-5xx/500.txt /tmp/5xx/500.txt
          kubectl cp sidecar-5xx:/tmp-5xx/secured.txt /tmp/5xx/secured.txt

      - name: Update Configmaps and Secrets
        run: |
          sleep 5
          current_time=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          wait_for_pod_log() {
            while [[ $(kubectl logs $1 --since-time ${current_time} | grep $2) == "" ]]; do echo "waiting 5 more seconds for '$2' to appear in logs of pod '$1'..." && sleep 5; done
            echo "Pod '$1' logs contains '$2'"
          }
          echo "Updating resources..."
          kubectl apply -f "test/resources/change_resources.yaml"
          pods=("sidecar" "sidecar-5xx")
          resources=("sample-configmap" "sample-secret-binary" "absolute-configmap" "relative-configmap" "change-dir-configmap" "url-configmap-500" "url-configmap-basic-auth" "sample-configmap")
          for p in ${pods[*]}; do
            for r in ${resources[*]}; do
              wait_for_pod_log $p $r
            done
          done
          # 20 more seconds after the last thing appeared in the logs.
          sleep 20
      - name: Verify files
        run: |
          echo "Verifying file content from sidecar and sidecar-5xx ..."
          # this needs to be the last statement so that it defines the script exit code
          echo -n "Hello World!" | diff - /tmp/hello.world &&
            diff test/kubelogo.png /tmp/cm-kubelogo.png &&
            diff test/kubelogo.png /tmp/secret-kubelogo.png &&
            diff test/kubelogo.png /tmp/url-downloaded-kubelogo.png &&
            echo -n "This absolutely exists" | diff - /tmp/absolute.txt &&
            echo -n "This relatively exists" | diff - /tmp/relative.txt &&
            echo -n "This change-dir exists" | diff - /tmp/change-dir.txt &&
            echo -n "allowed" | diff - /tmp/secured.txt &&
            echo -n '{"detail":"Not authenticated"}' | diff - /tmp/5xx/secured.txt &&
            [ ! -f /tmp/500.txt ] && echo "No 5xx file created" &&
            ls /tmp/script_result &&
            echo -n "Hello World!" | diff - /tmp/5xx/hello.world &&
            diff test/kubelogo.png /tmp/5xx/cm-kubelogo.png &&
            diff test/kubelogo.png /tmp/5xx/secret-kubelogo.png &&
            diff test/kubelogo.png /tmp/5xx/url-downloaded-kubelogo.png &&
            echo -n "This absolutely exists" | diff - /tmp/5xx/absolute.txt &&
            echo -n "This relatively exists" | diff - /tmp/5xx/relative.txt &&
            echo -n "This change-dir exists" | diff - /tmp/5xx/change-dir.txt &&
            echo -n "500" | diff - /tmp/5xx/500.txt &&
            ls /tmp/5xx/script_result &&
            kubectl exec sidecar -- sh -c "ls /tmp/" &&
            kubectl exec sidecar -- sh -c "! test -e /tmp/hello.world" && kubectl exec sidecar -- sh -c "test -e /tmp/change-hello.world" &&
            kubectl exec sidecar -- sh -c "! test -e /tmp/cm-kubelogo.png" && kubectl exec sidecar -- sh -c "test -e  /tmp/change-cm-kubelogo.png" &&
            kubectl exec sidecar -- sh -c "! test -e /tmp/secret-kubelogo.png" && kubectl exec sidecar -- sh -c "test -e /tmp/change-secret-kubelogo.png" &&
            kubectl exec sidecar -- sh -c "! test -e /tmp/absolute/absolute.txt" && kubectl exec sidecar -- sh -c "test -e /tmp/absolute/change-absolute.txt" &&
            kubectl exec sidecar -- sh -c "! test -e /tmp/relative/relative.txt" && kubectl exec sidecar -- sh -c "test -e /tmp/relative/change-relative.txt" &&
            kubectl exec sidecar -- sh -c "! test -e /tmp/orig-dir/change-dir.txt" && kubectl exec sidecar -- sh -c "test -e /tmp/new-dir/change-dir.txt" &&
            test $(cat /tmp/sidecar-pythonscript.log | grep "Hello from python script!" | wc -l) = "7"
